[project]
name = "datafusion-labelcraft"
description = "Репозиторий с решением задачи Data Fusion 2025: Label Craft"
packages = [
  {include = "src"}
]
requires-python = ">=3.11"
version = "0.1.0"

dependencies = [
  "accelerate~=1.3.0",
  "datasets~=3.3.0",
  "einops~=0.8.1", # For giga-embeddings
  "evaluate~=0.4.0",
  "loguru~=0.7.3",
  "matplotlib~=3.10.0",
  "networkx~=3.4.2",
  "numpy<2", # For torch
  "pandas~=2.2.3",
  "pyarrow~=19.0.0",
  "scikit-learn~=1.6.1",
  "seaborn~=0.13.2",
  "torch~=2.2.0", # Last version for my mac
  "transformers==4.46.0", # For giga-embeddings
]

[dependency-groups]
dev = [
  "boto3==1.35.99",
  "ipykernel~=6.29.5",
  "ipywidgets~=8.1.5",
  "mypy~=1.3.0",
  "pytest~=7.1.2",
  "ruff~=0.9.6",
]

[tool.ruff]
line-length = 99
target-version = "py311"
lint.ignore = [
  "A003", # builtin-attribute-shadowing
  "ARG005", # unused-lambda-argument
  "B023", # function-uses-loop-variable
  "E501", # line-too-long (may conflict with ruff formatter)
  "N805", # invalid-first-argument-name-for-method
  "RET504", # unnecessary-assign
  "S301", # suspicious-pickle-usage
  "S311", # suspicious-non-cryptographic-random-usage
  "S324", # hashlib-insecure-hash-function
  "S608", # Possible SQL injection vector through string-based query construction
  "SIM117", # Use a single `with` statement with multiple contexts instead of nested `with` statements
  "N806", # Variable in function should be lowercase
  "SIM112" # Use capitalized environment variable
]
lint.select = [
  "A", # flake8-builtins
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "E", # pycodestyle
  "ERA", # eradicate
  "I", # isort
  "F", # Pyflakes
  "G", # flake8-logging-format
  "N", # pep8-naming
  "PL", # pylint
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "T20", # flake8-print
  "UP" # pyupgrade
]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
pretty = true
python_version = 3.11
ignore_missing_imports = true
strict_optional = true
files = "src/, run.py"

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  "--tb=short",
  "--show-capture=log",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=xml:coverage.xml",
  "--cov-report=html",
  "--cov-branch",
  "--cov=app",
  "--cov-fail-under=70",
  "--cov-config=.coveragerc",
  "--testdox"
]
env_files = [
  ".env",
  "test.env"
]
env_override_existing_values = 1
norecursedirs = [
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
  ".direnv"
]

[lint.per-file-ignores]
"tests/*" = [
  "ARG001", # unused-function-argument
  "ARG002", # unused-method-argument
  "B008", # function-call-in-default-argument
  "PLR0913", # too-many-arguments
  "PT011", # pytest-raises-too-broad
  "S101", # assert
  "S106", # hardcoded-password-func-arg
  "S113", # request-without-timeout
  "SLF001", # private-member-access
  "C408" # Unnecessary `dict` call
]

[lint.pylint]
max-args = 10
